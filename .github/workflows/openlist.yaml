#=================================================
# https://github.com/sbwml/luci-app-openlist
# Description: Build RunFiles for luci-app-openlist using GitHub Actions
# License: MIT
# Author: Adapted from wukongdaily
#=================================================

name: Make luci-app-openlist run files

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch latest release tag from luci-app-openlist
        id: fetch_latest_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/sbwml/luci-app-openlist/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Clone makeself repository
        run: git clone https://github.com/megastep/makeself.git

      - name: Download latest luci-app-openlist files
        run: |
          # Adjust the URL to match the actual release asset naming convention
          # Example: Replace with actual architecture-specific tar.gz files if available
          # If no tar.gz, directly download .ipk files or adjust based on repository assets
          curl -LO $(curl -s https://api.github.com/repos/sbwml/luci-app-openlist/releases/latest | grep -oP '"browser_download_url":\s*".*luci-app-openlist.*\.ipk"' | cut -d '"' -f 4)
          mkdir luci-app-openlist
          mv *.ipk luci-app-openlist/

      - name: Organize files
        run: |
          pushd "luci-app-openlist" >/dev/null || exit 1
          for file in *~*.ipk; do
            [ -e "$file" ] || continue
            new_file="$(echo "$file" | tr -d '~')"
            if [ -e "$new_file" ]; then
              echo "Target file already exists, skipping: $new_file"
              continue
            fi
            mv "$file" "$new_file"
            echo "Renamed: $file -> $new_file"
          done
          popd >/dev/null

      - name: Create install.sh script
        run: |
          cat <<EOF > luci-app-openlist/install.sh
          #!/bin/sh
          opkg update
          if [ $? -ne 0 ]; then
              echo "opkg update failed."
              exit 1
          fi
          opkg install *.ipk
          EOF
          chmod +x luci-app-openlist/install.sh

      - name: Move luci-app-openlist directory to makeself
        run: |
          mv luci-app-openlist makeself/

      - name: Create self-extracting package
        run: |
          cd makeself
          ./makeself.sh luci-app-openlist/ luci-app-openlist_${{ env.LATEST_TAG }}.run "by github action" ./install.sh

      - name: Check file sizes
        run: |
          ls -lh makeself/luci-app-openlist_*.run

      - name: Fetch latest release details
        id: fetch_release_details
        run: |
          extra_content="![Github](https://img.shields.io/badge/luci-app-openlist.run-123456?logo=github&logoColor=fff&labelColor=yellow&style=for-the-badge)"
          echo "$extra_content" > "${{ github.workspace }}/info.md"

      - name: Print release notes
        run: |
          cat ${{ github.workspace }}/info.md

      - name: Generate new tag & release
        uses: softprops/action-gh-release@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST_TAG }}
          target_commitish: ${{ github.ref_name }}
          prerelease: false
          body_path: ${{ github.workspace }}/info.md

      - name: Upload run files as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: ${{ env.LATEST_TAG }}
          name: "luci-app-openlist-${{ env.LATEST_TAG }}"
          files: makeself/luci-app-openlist_*.run
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
